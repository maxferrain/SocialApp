{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","stateEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","descriptionBlock","classes","ProfileInfo","profile","className","src","photos","large","Preloader","item","Post","message","likesCount","postsBlock","posts","maxLC10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","MyPosts","memo","postsElements","map","p","values","addPost","post","MyPostsContainer","connect","state","profilePage","dispatch","newPostText","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.db8b566f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// import classes from \"./ProfileInfo.module.css\";\n// import Preloader from \"../../common/Preloader/Preloader\";\n\n// const {descriptionBlock} = classes;\nimport React from \"react\";\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({editMode: true})\n    }\n\n    deactivateEditMode() {\n        this.setState({editMode: false})\n        this.props.updateStatus(this.state.status)\n    }\n\n    onStatusChange = (e) => {\n        this.setState({status: e.currentTarget.value})\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({status: this.props.status})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"Tap to set status\"}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input\n                        onChange={this.onStatusChange}\n                        autoFocus={true}\n                        onBlur={this.deactivateEditMode.bind(this)}\n                        value={this.state.status}\n                    />\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ProfileStatus;\n","// import classes from \"./ProfileInfo.module.css\";\n// import Preloader from \"../../common/Preloader/Preloader\";\n// const {descriptionBlock} = classes;\n\nimport {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, stateEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        stateEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        stateEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span\n                    onDoubleClick={activateEditMode}\n                >{props.status || \"Tap to set status\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input\n                    onChange={onStatusChange}\n                    autoFocus={true}\n                    onBlur={deactivateEditMode}\n                    value={status}\n                />\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;\n","import classes from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst {descriptionBlock} = classes;\n\nfunction ProfileInfo({profile, status, updateStatus}) {\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n            {/*<div>*/}\n            {/*    <img*/}\n            {/*        width='800px'*/}\n            {/*        src='https://images.unsplash.com/photo-1623650915002-4a0819173cd9?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80'*/}\n            {/*    />*/}\n            {/*</div>*/}\n            <div className={descriptionBlock}>\n                <img src={profile.photos.large}/>\n                <div>\n                    {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n\n                    {/*{props.profile.aboutMe}*/}\n                    {/*{props.profile.lookingForAJob === true ? 'YES' : 'NO'}*/}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;\n","import classes from \"./Post.module.css\";\r\n\r\nconst {item} = classes;\r\n\r\nfunction Post(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={item}>\r\n                <img\r\n                    src='https://images.unsplash.com/photo-1574158622682-e40e69881006?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=80'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst {postsBlock, posts} = classes;\r\n\r\nconst maxLC10 = maxLengthCreator(10)\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea} name={'post'} placeholder={'Post text'}\r\n                    validate={[requiredField, maxLC10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({form: 'postsAddForm'}) (AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const onAddNewPost = (values) => {\r\n        props.addPost(values.post);\r\n    }\r\n    return (\r\n        <div className={postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <AddPostReduxForm onSubmit={onAddNewPost}/>\r\n                </div>\r\n                <div className={posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","// import React from \"react\";\nimport {addPostCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        // newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\n\nexport default MyPostsContainer;\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if(!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return (\n            <Profile\n                {...this.props}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n            />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}