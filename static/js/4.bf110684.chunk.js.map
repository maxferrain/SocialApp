{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialog","classes","DialogItem","props","path","id","className","to","name","message","Message","dialogsList","messagesList","messenger","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","mapStateToProps","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,YAAc,6BAA6B,OAAS,wBAAwB,aAAe,8BAA8B,QAAU,2B,sGCGxLC,EACAC,IADAD,OAgBWE,MAbf,SAAoBC,GAEhB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,qBACIC,UAAWN,EADf,SAGI,eAAC,IAAD,CAASO,GAAIH,EAAb,cAAqBD,EAAMK,KAA3B,UCZRC,EACAR,IADAQ,QAWWC,MARf,SAAiBP,GACb,OACQ,qBAAKG,UAAWG,EAAhB,SACKN,EAAMM,W,yCCCnBE,EAGAV,IAHAU,YACAC,EAEAX,IAFAW,aACAC,EACAZ,IADAY,UA0CJ,IAAMC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXf,KAAM,iBACNgB,YAAY,wBACZC,SAAU,CAACC,IAAeZ,OAGlC,8BACI,kDAQDa,EA3Df,SAAiBxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAERzB,KAAMyB,EAAEzB,KACRH,GAAI4B,EAAE5B,IAFD4B,EAAE5B,OAKX6B,EAAmBN,EAAMO,SACxBH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAER3B,QAAS2B,EAAE3B,SADN2B,EAAE/B,OASf,OAAIF,EAAMkC,OAGN,sBAAK/B,UAAWO,EAAhB,UACI,qBAAKP,UAAWK,EAAhB,SACKmB,IAGL,qBAAKxB,UAAWM,EAAhB,SACKsB,IAEL,cAAClB,EAAD,CAAqBG,SAfT,SAACmB,GACjBnC,EAAMoC,YAAYD,EAAOE,sBAGJ,cAAC,IAAD,CAAUjC,GAAI,Y,+CClCvCkC,EAAkB,SAACb,GAAD,MAAY,CAC9BS,OAAQT,EAAMc,KAAKL,S,OCkBRM,sBACXC,aAlBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAK9C,MAAMkC,OACT,cAACU,EAAD,eAAeE,KAAK9C,QADI,cAAC,IAAD,CAAUI,GAAI,eAJV,GAEX2C,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAA0BI,KCMpDL,CAGZhB","file":"static/js/4.bf110684.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"Dialogs_messenger__o7mZI\",\"dialogsList\":\"Dialogs_dialogsList__137kM\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messagesList\":\"Dialogs_messagesList__3P5tp\",\"message\":\"Dialogs_message__1xIDh\"};","import classes from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst {\n    dialog\n} = classes\n\nfunction DialogItem(props) {\n\n    const path = '/dialogs/' + props.id;\n\n    return (\n        <div\n            className={dialog}\n        >\n            <NavLink to={path}> {props.name} </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import classes from \"./../Dialogs.module.css\";\n\nconst {\n    message\n} = classes\n\nfunction Message(props) {\n    return (\n            <div className={message}>\n                {props.message}\n            </div>\n    )\n}\n\nexport default Message;\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst {\r\n    dialogsList,\r\n    messagesList,\r\n    messenger\r\n} = classes\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map((d) => <DialogItem\r\n            key={d.id}\r\n            name={d.name}\r\n            id={d.id}\r\n        />);\r\n\r\n    let messagesElements = state.messages\r\n        .map((m) => <Message\r\n            key={m.id}\r\n            message={m.message}\r\n            />\r\n        );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={messenger}>\r\n            <div className={dialogsList}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={messagesList}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'newMessageBody'}\r\n                    placeholder='Enter your message...'\r\n                    validate={[requiredField, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps) (RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}\n","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => { // data from state\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => { // callbacks\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent)\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n) (Dialogs);\n"],"sourceRoot":""}